import nltk
nrc = "NRC-emotion-lexicon-wordlevel-alphabetized-v0.92.txt"
count=0
emotion_dict=dict()
with open(nrc,'r') as f:
    all_lines = list()
    for line in f:
        if count < 46:
            count+=1
            continue
        line = line.strip().split('\t')
        if int(line[2]) == 1:
            if emotion_dict.get(line[0]):
                emotion_dict[line[0]].append(line[1])
            else:
                emotion_dict[line[0]] = [line[1]]
        
def emotion_analyzer(text,emotion_dict):
    #Set up the result dictionary
    emotions = {x for y in emotion_dict.values() for x in y}
    emotion_count = dict()
    for emotion in emotions:
        emotion_count[emotion] = 0

    #Analyze the text and normalize by total number of words
    total_words = len(text.split())
    for word in text.split():
        if emotion_dict.get(word):
            for emotion in emotion_dict.get(word):
                emotion_count[emotion] += 1/len(text.split())
    return emotion_count

import os
import json

index = [] # List of filenames (date and time)
articles = [] # List of texts 
root = "nyt"
for file in os.listdir(root):
    with open(root + "\\"  + file, "r") as f:
        dat = " ".join(line.rstrip() for line in f)
        jdat = json.loads(dat)
        index.append(file)
        articles.append(jdat["headline"]["main"]+ jdat["text"])
        

import pandas as pd

sentiment = pd.DataFrame(columns = ["fear","trust","negative","positive","joy","disgust","anticipation","sadness","suprise"])
        
for i in range(len(index)):
    text = articles[i]
    title = index[i]
    result = emotion_analyzer(text, emotion_dict)
    
    sentiment.loc[title] = [result['fear'],result['trust'],
          result['negative'],result['positive'],result['joy'],result['disgust'],
          result['anticipation'],result['sadness'],result['surprise']]
    
sentiment.to_csv("sentiment.csv")
